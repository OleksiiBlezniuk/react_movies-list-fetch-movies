{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/getMovieFromServer.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovieToList","checkMovie","useState","setMovie","error","setError","query","setQuery","isMovieInList","setIsMovieInList","isMovieAdded","setIsMovieAdded","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","preventDefault","fetch","then","response","json","getMovie","movieFromServer","Response","imdbID","Title","Plot","Poster","App","moviesFromStorage","JSON","parse","window","localStorage","getItem","data","setMovies","newMovie","stringifiedMovies","stringify","setItem","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56f7cd45.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\nexport const FindMovie = ({ addMovieToList, checkMovie }) => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(false);\n  const [query, setQuery] = useState('');\n  const [isMovieInList, setIsMovieInList] = useState(false);\n  const [isMovieAdded, setIsMovieAdded] = useState(false);\n\n  const findMovie = (event) => {\n    event.preventDefault();\n\n    getMovie(query)\n      .then((movieFromServer) => {\n        if (movieFromServer.Response === 'False') {\n          setError(true);\n          setMovie(null);\n\n          return;\n        }\n\n        setMovie(movieFromServer);\n        setError(false);\n      });\n  };\n\n  const handleChange = (event) => {\n    const { value } = event.target;\n\n    setQuery(value);\n    setError(false);\n    setIsMovieInList(false);\n    setIsMovieAdded(false);\n  };\n\n  const addMovie = (event) => {\n    event.preventDefault();\n\n    if (movie === null) {\n      return;\n    }\n\n    if (checkMovie(movie.imdbID)) {\n      setIsMovieInList(true);\n    } else {\n      addMovieToList(movie);\n    }\n\n    setQuery('');\n    setMovie(null);\n    setIsMovieAdded(true);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': error,\n              })}\n              value={query}\n              onChange={handleChange}\n            />\n          </div>\n\n          <p className={classNames('help', 'is-danger', {\n            'help--visible': error,\n          })}\n          >\n            Can&apos;t find a movie with such a title\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addMovie}\n            >\n              Add to the list\n            </button>\n            <p className={classNames('help', 'is-danger', {\n              'help--visible': isMovieInList,\n            })}\n            >\n              Movie is already in list\n            </p>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {isMovieAdded && (\n          <h2 className=\"title\">Movie successfully added!</h2>\n        )}\n        {movie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard\n              title={movie.Title}\n              description={movie.Plot}\n              imgUrl={movie.Poster}\n              imdbUrl={`https://www.imdb.com/title/${movie.imdbID}`}\n            />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovieToList: PropTypes.func.isRequired,\n  checkMovie: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=e78a8bc0&t=';\n\nexport function getMovie(query) {\n  return fetch(`${BASE_URL}${query}`)\n    .then(response => response.json());\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nconst moviesKey = 'movies';\n\nexport function App() {\n  const moviesFromStorage = JSON.parse(window.localStorage.getItem(moviesKey));\n  const [movies, setMovies] = useState(moviesFromStorage || data);\n\n  const addMovieToList = (movie) => {\n    const newMovie = {\n      title: movie.Title,\n      description: movie.Plot,\n      imgUrl: movie.Poster,\n      imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n      imdbId: movie.imdbID,\n    };\n    const stringifiedMovies = JSON.stringify([...movies, newMovie]);\n\n    setMovies([...movies, newMovie]);\n    window.localStorage.setItem(moviesKey, stringifiedMovies);\n  };\n\n  const checkMovie = imdbId => movies.some(movie => movie.imdbId === imdbId);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovieToList={addMovieToList}\n          checkMovie={checkMovie}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}